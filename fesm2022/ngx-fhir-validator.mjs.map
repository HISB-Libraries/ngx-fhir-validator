{"version":3,"file":"ngx-fhir-validator.mjs","sources":["../../../projects/ngx-fhir-validator/src/lib/providers/validator-constants.ts","../../../projects/ngx-fhir-validator/src/lib/environment-handler.service.ts","../../../projects/ngx-fhir-validator/src/lib/services/fhir-validator.service.ts","../../../projects/ngx-fhir-validator/src/lib/components/ngx-fhir-validator.component.ts","../../../projects/ngx-fhir-validator/src/lib/components/ngx-fhir-validator.component.html","../../../projects/ngx-fhir-validator/src/lib/ngx-fhir-validator.module.ts","../../../projects/ngx-fhir-validator/src/public-api.ts","../../../projects/ngx-fhir-validator/src/ngx-fhir-validator.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\n\n@Injectable()\n//TODO: how are these sorted?\n\n// The profiles can be found here https://build.fhir.org/ig/HL7/fhir-mdi-ig/toc.html\nexport class ValidatorConstants {\n\n  PROFILE_LIST = [\n    { name : \"Bundle - Document MDI to EDRS\",                      url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Bundle-document-mdi-to-edrs\"},\n    { name : \"Composition - MDI to EDRS\",                          url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Composition-mdi-to-edrs\"},\n    { name : \"List - Cause of Death Pathway\",                      url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/List-cause-of-death-pathway\"},\n    { name : \"Observation - Cause of Death Condition\",             url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/List-cause-of-death-pathway\"},\n    { name : \"Observation - Condition Contributing to Death\",      url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-condition-contributing-to-death\"},\n    { name : \"Observation - Death Date\",                           url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-death-date\"},\n    { name : \"Observation - Death Injury/Event Occurred at Work\",  url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-death-injury-at-work\"},\n    { name : \"Observation - How Death Injury Occurred\",            url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-how-death-injury-occurred\"},\n    { name : \"Observation - Manner of Death\",                      url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-manner-of-death\"},\n    { name : \"Observation - Decedent Pregnancy\",                   url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-decedent-pregnancy\"},\n    { name : \"Observation - Tobacco Use Contributed to Death\",     url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-tobacco-use-contributed-to-death\"},\n    { name : \"Bundle - Message Toxicology to MDI\",                 url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Bundle-message-tox-to-mdi\"},\n    { name : \"MessageHeader - Toxicology to MDI\",                  url: \"http://hl7.org/fhir/us/mdi/Sâˆ†tructureDefinition/MessageHeader-toxicology-to-mdi\"},\n    { name : \"DiagnosticReport - Toxicology Lab Result to MDI\",    url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/DiagnosticReport-toxicology-to-mdi\"},\n    { name : \"Specimen - Toxicology Lab\",                          url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Specimen-toxicology-lab\"},\n    { name : \"Observation - Toxicology Lab Result\",                url: \"http://hl7.org/fhir/us/mdi/StructureDefinition/Observation-toxicology-lab-result\"},\n    { name : \"Resource Profile: US Core Practitioner Profile\",     url: \"http://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-practitioner.html#root\"},\n    { name : \"Resource Profile: US Core Patient Profile\",          url: \"https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-patient.html#root\"},\n  ]\n\n  // Validator API link\n  static PROD_URI = \"https://heat.icl.gtri.org/fhir-validator-service/fhir\";\n\n  static DISPLAYED_COLUMNS = ['toggle', 'icon', 'severity', 'fhirPath', 'location'];\n  static SEVERITY_LEVELS: string[] = ['error', 'warning', 'information', 'note'];\n  static FONT_WIDTH: number = 7.54;\n\n}\n","import {Inject, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentHandlerService {\n\n  constructor(@Inject('serverBaseUrl') private serverBaseUrl: any) { }\n\n  getFhirServerBaseURL(): string {\n    let serverBaseUrl = this.serverBaseUrl;\n    if (!this.serverBaseUrl.endsWith(\"/\")) {\n      serverBaseUrl = serverBaseUrl.concat(\"/\");\n    }\n    return serverBaseUrl;\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {EnvironmentHandlerService} from \"../environment-handler.service\";\nimport {ImplementationGuide} from \"../modal/implementation-guide\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FhirValidatorService {\n  private readonly serverBaseUrl: string;\n  constructor(\n    private http: HttpClient,\n    private _snackBar: MatSnackBar,\n    private environmentHandler: EnvironmentHandlerService) {\n    this.serverBaseUrl = this.environmentHandler.getFhirServerBaseURL();\n  };\n\n  showErrorMessage(messageStr: string = 'Server Error.'){\n    this._snackBar.open(messageStr, 'x' ,{\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n      panelClass: ['error-color'],\n      duration: 5000\n    });\n  }\n\n  showSuccessMessage(messageStr: string){\n    this._snackBar.open(messageStr, 'x' ,{\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n      panelClass: ['mat-toolbar', 'mat-primary'],\n      duration: 3000\n    });\n  }\n\n  closeNotification(){\n    this._snackBar.dismiss();\n  }\n\n  getUiValidationMessages(fhirResource: any, resourceFormat: string, selectedIg: ImplementationGuide): string {\n\n    if(!fhirResource || (!!fhirResource && Object.keys(fhirResource).length === 0)) {\n      return \"Please enter a FHIR resource for validation.\";\n    }\n    else if(!selectedIg){\n      return \"Please select an Implementation Guide\";\n    }\n    else if (resourceFormat === 'json'){\n      if(!this.isJson(fhirResource)){\n        // Could not parse the resource at all. It is not a valid JSON as far as the js parser is concerned.\n        return \"Invalid json format detected.\";\n      }\n      else if(!JSON.parse(fhirResource).resourceType){\n        return \"Missing required resourceType property.\";\n      }\n    }\n    else if (resourceFormat === 'xml') {\n      if(!this.isXmlString(fhirResource)){\n        // Could not parse the resource at all. It is not a valid XML as far as the js parser is concerned.\n        return \"Invalid xml format detected.\";\n      }\n      else {\n        // TODO we may need to to some error handling here\n        let fhirResourceXML: any = new DOMParser().parseFromString(fhirResource, 'text/xml');\n        const resourceType = fhirResourceXML.childNodes[0].nodeName;\n        const xmlnsAttribute = fhirResourceXML.querySelector(resourceType).getAttribute('xmlns');\n\n        // all FHIR resources should have xmlns=\"http://hl7.org/fhir\"\n        if(!xmlnsAttribute || xmlnsAttribute != 'http://hl7.org/fhir'){\n          return \"Invalid or missing xmlns attribute.\";\n        }\n      }\n    }\n    // did not find any obvious errors, so returning nothing\n    return '';\n  }\n\n  isJson(str: any): boolean {\n    if (typeof str != 'string')\n      str = JSON.stringify(str);\n    try {\n      JSON.parse(str.trim());\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  isXmlString(str: string): boolean {\n    try {\n      const parser = new DOMParser();\n      const theDom = parser.parseFromString(str?.trim(), 'application/xml');\n      return !(theDom.getElementsByTagName('parsererror').length > 0);\n    }\n    catch (e) {\n      return false;\n    }\n  }\n\n  beautifyJSON(str: string): string{\n    return JSON.stringify(JSON.parse(str), null, 2);\n  }\n\n  // I borrowed some regex code\n  beautifyXML(str: string): string{\n    let formatted = '', indent= '';\n    const tab='  ';\n    str.split(/>\\s*</).forEach(function(node) {\n      if (node.match( /^\\/\\w/ )) {\n        indent = indent.substring(tab.length);\n      }\n      formatted += indent + '<' + node + '>\\r\\n';\n      if (node.match( /^<?\\w[^>]*[^\\/]$/ )){\n        indent += tab;\n      }\n    });\n    return formatted.substring(1, formatted.length-3);\n  }\n\n  validateFhirResource(fhirResource: any, resourceFormat: string, ig: string):  Observable<any> {\n\n    let headers: any| null= null;\n    let requestData: any| null = null;\n\n    // Requests are formed in order to be consumed by the API.\n    // Note that requestData is nothing but a wrapper to the request and should never change.\n    if (resourceFormat === 'json') {\n      requestData = {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"ig\",\n            \"valueString\": ig\n          },\n          {\n            \"name\": \"resource\",\n            \"resource\": fhirResource,\n          },\n          {\n            \"name\": \"includeFormattedResource\",\n            \"valueBoolean\": true\n          },\n          {\n            \"name\": \"format\",\n            \"valueString\": \"application/fhir+json\"\n          }\n        ]\n      }\n\n      headers = new HttpHeaders()\n        .set('Content-Type', 'application/fhir+json');\n    }\n    else if (resourceFormat === 'xml') {\n\n      requestData =\n        `<Parameters xmlns=\"http://hl7.org/fhir\">\n          <parameter>\n            <name value=\"ig\"/>\n            <valueString value=\"${ig}\"/>\n          </parameter>\n          <parameter>\n            <name value=\"format\"/>\n            <valueString value=\"application/fhir+xml\"/>\n          </parameter>\n          <parameter>\n            <name value=\"includeFormattedResource\"/>\n            <valueBoolean value=\"true\"/>\n          </parameter>\n          <parameter>\n            <name value=\"resource\" />\n            <resource>\n              ${fhirResource}\n            </resource>\n          </parameter>\n      </Parameters>`;\n      headers = new HttpHeaders()\n        .set('Content-Type', 'application/fhir+xml');\n    }\n\n    return this.http.post(this.serverBaseUrl + \"$validate\", requestData, {headers: headers}).pipe(map((result: any) => (\n      result as Object\n    )));\n  }\n\n  getIgList(){\n    return this.http.get(this.serverBaseUrl + \"$packages\")\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input, OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {ValidatorConstants} from \"../providers/validator-constants\";\nimport {FormControl, FormGroup, UntypedFormControl, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {FhirValidatorService} from \"../services/fhir-validator.service\";\nimport {ResponseItem} from \"../modal/response-item\";\nimport {ValidationResults} from \"../modal/validation-results\";\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\nimport {ApiResponse} from \"../modal/api-response\";\nimport {ValidatorInput} from \"../modal/validator-input-format\";\nimport {ImplementationGuide} from \"../modal/implementation-guide\";\n\nexport type SubmitButtonAlignment = 'left' | 'right';\n@Component({\n  selector: 'lib-ngx-fhir-validator',\n  templateUrl: 'ngx-fhir-validator.component.html',\n  styleUrls: ['ngx-fhir-validator.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\n\nexport class NgxFhirValidatorComponent implements OnInit{\n  @Input() validatorTitle: string = '';\n  @Input() validationResultsExpanded: boolean = false; // Validation results details initial state\n  @Input() resultDetailsExpandBtnShown: boolean = true; // Show/hide Expand Validation Results btn\n  @Input() formatResourceBtnShown: boolean = false; // Show/hide Format Resource btn\n  @Input() clearValidatorBtnShown: boolean = true; // Show/hide Clear Validator btn\n  @Input() submitBtnShown: boolean = true; // Show/hide Submit btn\n  @Input() exportResultsButtonShown = true;\n  @Input() submitBtnTitle: string = 'Submit'; //The submit button title. \"Submit\" is generic name and other apps may want to change it\n  @Input() validationInputFormat: ValidatorInput = {format: 'json', accepts: '.json'};\n  @Input() maxFileSize = 250000 // Max allowed file size is 250KB\n  @Input() submitBtnAlignment: SubmitButtonAlignment = 'right'; // The default location for the Submit btn\n  @Input() cancelValidationBtnShown: boolean = true;\n  @Input() buttonTxtColor: string  = 'white';\n  @Input() buttonBackgroundColor='#4858B8';\n  @Input() exportValidationResultsBtnName: string = 'Export Results (.zip)';\n\n  @Output() onValidation = new EventEmitter<ValidationResults>();\n  @Output() onApiError = new EventEmitter<any>();\n  @Output() onResourceContentChanged = new EventEmitter<any>();\n  @Output() onExportValidationResults = new EventEmitter<any>();\n  @Input() ig: ImplementationGuide;\n\n\n  @ViewChild('validatorInput',{static:false, read: ElementRef}) inputRef: any;\n\n  apiResponse: ApiResponse | null;\n  fhirResource: string = ''// The Resource.\n  resourceFormat = 'json'; // The resource format could be JSON or XML, with JSON being the default format.\n  fileName: string = ''; // Name of the file uploaded by the user. We need this to render the filename in the UI.\n  validationErrorStr: string = ''; // We use this value to store preliminary error messages or a generic error message.\n  hasResponseData = false;  // Indicates if the response generated any messages. If true, we render the report\n  parsedFhirResource: string = ''; // We store value of the validator result in order to present it to the user.\n  displayedColumns: string[];\n  isLoading = false;\n  allExpanded = true; // Used to render collapsed/expanded all icon as well as calculate if all results are expanded/collapsed\n  severityLevels = ValidatorConstants.SEVERITY_LEVELS;\n  severityLevelsFormControl: UntypedFormControl; // A simple form control used for filtering the results.\n  dataSource: MatTableDataSource<any>;// Data source for the report table.\n  validationFinished = false;\n  isValidResource = false; // We use this to render the success message\n  serverErrorDetected = false; // Tracks if the server has responded with an error (404, 500). Used to render the error in UI.\n  serverErrorList: any [] = []; // Store the data from the OperationOutcome resource\n  serverErrorStatus: string = ''; // We store the error response status here (i.e. 404, 500)\n  lines : number = 1;\n  width : number = 0;\n  igList: ImplementationGuide[] = [];\n  igNameList: string[] = [];\n  igVersionList: string[] = [];\n  selectedIgName: string;\n  selectedIgVersion: string;\n  igVersionDropdownList: string[];\n  selectedIG: ImplementationGuide;\n\n  //TODO remove this code when the API returns a timeout error\n  serverTimoutDetected = false;\n  SERVER_TIMEOUT_INTERVAL = 240000; //four minutes\n\n  igSelectionFg = new FormGroup({});\n\n  constructor(\n    private fhirValidatorService: FhirValidatorService,\n  ) {\n    this.displayedColumns = ValidatorConstants.DISPLAYED_COLUMNS;\n    this.severityLevelsFormControl = new UntypedFormControl(this.severityLevels);\n    this.dataSource = new MatTableDataSource<any[]>();\n    this.apiResponse = null;\n  }\n\n  ngOnInit(): void {\n    if(this.ig){\n      this.selectedIG = this.ig;\n    }\n    else{\n      this.getIgList();\n    }\n  }\n\n  getIgList() {\n\n    this.fhirValidatorService.getIgList().subscribe({\n      next: (value: any) => {\n        this.igList = value;\n        this.igNameList = value.map(el => el.name);\n        this.igNameList = [...new Set(this.igNameList)];\n        this.igVersionList = value.map(el => el.version);\n        this.igSelectionFg.addControl('selectedIgName', new FormControl('', Validators.required));\n        this.igSelectionFg.addControl('selectedIgVersion', new FormControl(''));\n        this.igSelectionFg.controls['selectedIgName'].valueChanges.subscribe({\n          next: value => {\n            this.getIgVersionsList(value, this.igList);\n            this.igSelectionFg.controls['selectedIgVersion'].patchValue('current');\n          }\n        })\n      },\n      error: err => console.error(err)\n    });\n\n  }\n\n  formatFhirResource(){\n    if(this.fhirResource){\n      if(this.resourceFormat === 'json' && this.fhirValidatorService.isJson(this.fhirResource)){\n        this.fhirResource = this.fhirValidatorService.beautifyJSON(this.fhirResource);\n      }\n      else if(this.resourceFormat === 'xml' && this.fhirValidatorService.isXmlString(this.fhirResource)){\n        this.fhirResource = this.fhirValidatorService.beautifyXML(this.fhirResource);\n      }\n    }\n    this.lineNumbers()\n  }\n\n  lineNumbers() {\n    const linedStrings = this.fhirResource.split(/[\\n\\r]/g);\n    this.lines = linedStrings.length;\n    this.width = this.inputRef.nativeElement.offsetWidth;\n    const charInLines = this.width / ValidatorConstants.FONT_WIDTH;\n\n    for (const line of linedStrings) {\n      if (line.length > charInLines) {\n        this.lines = this.lines + (line.length / charInLines)\n      }\n    }\n  }\n\n  getLineNumbers() {\n    return Array.from({length: this.lines}, (_, i) => (i + 1).toString());\n  }\n\n  // It is important the format is working with \"best effort\"\n  // That is it may or may not format the text properly and require extensive testing to validate its operation.\n  onFormatInput() {\n    this.formatFhirResource()\n    this.fhirValidatorService.showSuccessMessage(\"Formatting Attempted.\");\n  }\n\n  clearUI(){\n    this.fhirResource='';\n    this.fileName=''\n    this.clearValidationErrors();\n    this.onResourceContentChanged.emit(this.fhirResource);\n  }\n\n  onClear(){\n    this.clearUI();\n  }\n\n  onFileSelected(event: any) {\n\n    const file: File = event.target.files[0];\n\n    if (file) {\n      if(file.size > this.maxFileSize){\n        console.error(\"File too big\")\n        this.fhirValidatorService.showErrorMessage(\"This file exceeds \" + this.maxFileSize /  1000 + \"kb and cannot be processed\");\n      }\n      else {\n        // auto toggle the file type radio buttons\n        if (file.type === \"text/xml\") {\n          this.resourceFormat = 'xml';\n        } else if (\"application/json\") {\n          this.resourceFormat = 'json';\n        }\n\n        // set the filename in the UI\n        this.fileName = file.name;\n\n        const reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n        reader.onload = () => {\n          this.fhirResource = reader.result as string;\n          this.onResourceContentChanged.emit(this.fhirResource);\n          this.formatFhirResource();\n        }\n        reader.onerror = () => {\n          this.fhirValidatorService.showErrorMessage(\"Unable to open the file.\");\n        }\n      }\n\n    }\n    else {\n      this.fhirValidatorService.showErrorMessage(\"Unable to open the file.\");\n    }\n  }\n\n  validateFhirResource(fhirResource: any, resourceFormat: string) {\n    // Set the stage for the validation. Reset variables to default values.\n    if(!fhirResource){\n      fhirResource = this.fhirResource\n    }\n    if(!resourceFormat){\n      resourceFormat = this.resourceFormat\n    }\n\n    if(this.igSelectionFg.controls?.['selectedIgName']) {\n      this.igSelectionFg.controls['selectedIgName'].markAsTouched();\n      this.igSelectionFg.controls['selectedIgName'].updateValueAndValidity();\n      if (this.igSelectionFg.valid) {\n        this.setSelectedIg(this.igSelectionFg.controls['selectedIgName'].value, this.igSelectionFg.controls['selectedIgVersion'].value);\n      }\n    }\n\n    this.isValidResource = true;\n    this.hasResponseData = false;\n    this.serverErrorList = [];\n    this.serverErrorStatus = '';\n    this.serverErrorDetected = false;\n    this.serverTimoutDetected = false;\n    this.severityLevelsFormControl.patchValue(this.severityLevels);\n\n    this.validationErrorStr = this.fhirValidatorService.getUiValidationMessages(fhirResource, resourceFormat, this.selectedIG);\n\n    if(this.validationErrorStr){\n      //see if we can find any obvious issues with the resource here\n      this.isValidResource = false;\n      this.validationFinished = true;\n      this.onValidation.emit({hasBasicErrors: true, isValid: false, resource: fhirResource});\n\n    }\n    else {\n      // The UI validation passed successfully, and we execute the backend validation.\n      this.executeAPIValidation(fhirResource, resourceFormat, this.selectedIG?.canonicalUrl);\n    }\n  }\n\n  onPasteFhirResource(event: ClipboardEvent) {\n    this.fileName = '';\n    if(!this.fhirResource) {\n      this.clearUI();\n    }\n    let text = event.clipboardData?.getData('text') ?? '';\n    if (this.fhirValidatorService.isJson(text)) {\n      this.resourceFormat = 'json';\n    } else if (this.fhirValidatorService.isXmlString(text)) {\n      this.resourceFormat = 'xml';\n    }\n  }\n\n  getLineNumbersBySeverity(apiResponse: ApiResponse | null, severity: string): number[]{\n    if(!apiResponse || apiResponse.issue?.length === 0){\n      return [];\n    }\n    return apiResponse.issue\n      .filter(element => element.severity == severity)\n      .filter(element => element.location)\n      .map(element => this.getLineNumberFromLocation(element.location[0]) - 1);\n  };\n\n  scrollToElement(location: string ): void {\n    const element = document.querySelector(location);\n    if (element) element.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n\n  getLineNumberFromLocation(locationStr: string): number {\n    // Get the location from response\n    return (locationStr?.length > 0) ? parseInt (locationStr.split(\",\")[0].replace( /^\\D+/g, '')) : 0;\n  }\n\n  // When the user selects a location from the errors and warning results, we want to scroll the page to that location.\n  onLocationSelected(response: any): void {\n    let locationId = ('#mark' + this.getLineNumberFromLocation(response.location[0])).toLowerCase();\n    this.scrollToElement(locationId);\n  }\n\n  // Sends fhir resource to be validated, renders response\n\n  private executeAPIValidation(fhirResource: any, resourceFormat: string, ig: string) {\n    // Reset values to default state prior to validation.\n    this.isLoading = true;\n    this.parsedFhirResource = '';\n    this.validationFinished = false;\n    this.apiResponse = null;\n\n    if(this.resourceFormat === \"json\"){\n      fhirResource = JSON.parse(fhirResource);\n    }\n    else if(this.resourceFormat === \"xml\"){\n      let fhirResourceXML = new DOMParser().parseFromString(fhirResource, 'text/xml');\n      fhirResource = fhirResourceXML.documentElement.outerHTML;\n    }\n\n    this.fhirValidatorService.validateFhirResource(fhirResource, resourceFormat, ig)\n      .subscribe({\n        next: (response) => {\n          this.validationFinished = true;\n          let issue = response.issue;\n          if(issue.length === 1 && issue[0].severity === \"Information\" && issue[0]?.message.toLowerCase() === \"ALL OK\".toLowerCase()){\n            this.isValidResource = true;\n            this.onValidation.emit({isValid: true, resource: fhirResource});\n          }\n          else {\n            this.isValidResource = false;\n            this.validationErrorStr = \"Please see the validation errors below.\";\n            this.setValidatorResponse(response, fhirResource);\n          }\n\n          // Some strings produced by the validator are long and miss spaces. This could break the UI validation report.\n          // Therefore, we insert a space after each coma found in the validation response text.\n          issue.forEach((element: any) => {\n            element.diagnostics = element.diagnostics.replace(/,(?=[^\\s])/g, \", \")\n          })\n\n\n          // sort by line numbers\n          issue = issue.sort((a: any, b: any) => {\n            return this.getLineNumberFromLocation(a.location?.[0]) - this.getLineNumberFromLocation(b.location?.[0]);\n          });\n\n          // mat each item of the response to an object and make sure that the results are in expanded state in the\n          // UI validation report.\n          this.dataSource.data = issue.map((element: any) => {\n            let result: ResponseItem = Object.assign({}, element);\n            result.expanded = true;\n            return result\n          });\n\n          this.dataSource.filterPredicate = this.getFilterPredicate();\n          this.apiResponse = response;\n          this.apiResponse!.formattedResource = response?.extension?.[0]?.valueString;\n        },\n        error: (err) => {\n          this.isLoading = false;\n          this.serverErrorDetected = true;\n          this.serverErrorStatus = err.status;\n          if(err?.error?.issue){\n            this.serverErrorList = err.error.issue;\n          }\n          this.onApiError.emit(err);\n          console.error(err);\n        },\n        complete: () => {\n          this.isLoading = false;\n        }\n      });\n\n    //TODO make sure to remove this function when the server side timeout is implemented.\n    setTimeout(\n      () => {\n        if(this.isLoading) {\n          this.isLoading = false;\n          this.serverTimoutDetected = true;\n        }\n      }, this.SERVER_TIMEOUT_INTERVAL\n    );\n\n  }\n\n  toggle() {\n    this.allExpanded = !this.allExpanded;\n    this.dataSource.data.forEach((item: any) => item.expanded = this.allExpanded);\n  }\n\n  onFilterResults() {\n    this.dataSource.filter = this.severityLevelsFormControl.value.join(',');\n  }\n\n  getFilterPredicate() {\n    return function (row: any, filters: string) {\n      let matchFilter: boolean = false;\n      const filterArray = filters.split(',');\n      filterArray.forEach((filter: string) => {\n          if(row.severity.toLowerCase().indexOf(filter.toLowerCase())!= -1){\n            matchFilter = true;\n          }\n        }\n      )\n      return matchFilter;\n    };\n  }\n\n  onCancelValidation (){\n    this.isLoading = false;\n  }\n\n  checkExpandCollapseAllStatus() {\n    /*\n    * When all elements are collapsed we want to change the expansion icon to render \"expand all\"\n    * When all elements are expanded we want to change the expansion icon to \"collapse all\"\n    * This will save extra unnecessary click for the user\n    */\n    const expandedElementsCount = this.dataSource.data.filter(element => element['expanded']).length;\n    if(expandedElementsCount === this.dataSource.data.length){\n      this.allExpanded = true;\n    }\n    else if(expandedElementsCount === 0){\n      this.allExpanded = false;\n    }\n  }\n\n  isFilterEnabled(severity: string) {\n    return !!this.dataSource.data.find((element: any) => element.severity.toLowerCase() === severity.toLowerCase());\n  }\n\n  getCount(level: any) {\n    return this.dataSource.data\n      .filter((element: any) => element.severity.toLowerCase() === level.toLowerCase())\n      .length;\n  }\n\n  onCloseServerErrorMessage() {\n    this.serverErrorDetected = false;\n    this.serverErrorList = [];\n    this.serverErrorStatus = '';\n  }\n\n  private setValidatorResponse(apiResponse: any, resource: string) {\n    const errorsCount = apiResponse.issue.filter((element: any) => element.severity == 'error')?.length ?? 0;\n    const warningsCount = apiResponse.issue.filter((element: any) => element.severity == 'warning')?.length ?? 0;\n    const infoCount = apiResponse.issue.filter((element: any) => element.severity == 'information')?.length ?? 0;\n    const notesCount = apiResponse.issue.filter((element: any) => element.severity == 'note')?.length ?? 0;\n\n    let validationResult: ValidationResults = {};\n    validationResult.errorsCount = errorsCount;\n    validationResult.warningsCount = warningsCount;\n    validationResult.notesCount = notesCount;\n    validationResult.infoCount = infoCount;\n\n    validationResult.isValid = errorsCount <= 0;\n    validationResult.resource = resource;\n    this.onValidation.emit(validationResult);\n  }\n\n  clearValidationErrors(){\n    this.validationErrorStr = '';\n    this.isValidResource = false;\n    this.parsedFhirResource = '';\n    this.hasResponseData = false;\n    this.validationFinished = false;\n    this.isLoading = false;\n    this.serverErrorDetected = false;\n    this.serverErrorList = [];\n    this.serverErrorStatus = '';\n    this.serverTimoutDetected = false;\n    this.apiResponse = null;\n  }\n\n  getLineItemClass(item: string, i: number) {\n\n    if(this.getLineNumbersBySeverity(this.apiResponse, 'error').indexOf(i) != -1){\n      this.hasResponseData = true;\n      return \"error-mark\";\n    }\n    else if(this.getLineNumbersBySeverity(this.apiResponse, 'warning').indexOf(i) != -1){\n      this.hasResponseData = true;\n      return \"warning-mark\";\n    }\n    else if(this.getLineNumbersBySeverity(this.apiResponse, 'information').indexOf(i) != -1){\n      this.hasResponseData = true;\n      return \"info-mark\";\n    }\n    else if(this.getLineNumbersBySeverity(this.apiResponse, 'note').indexOf(i) != -1){\n      this.hasResponseData = true;\n      return \"note-mark\";\n    }\n\n    else return'';\n  }\n\n\n  exportValidationResults() {\n    // Add the formatted resource form the validator response to a json file\n    // This way the line numbers from the validator report will match the json file numbers\n    const jsonResource = this?.apiResponse?.formattedResource || '';\n    // Create a pdf report\n    const resultsData = this.dataSource.data\n      .map(element=> { return {severity: element.severity, diagnostics: element.diagnostics, location: element.location, fhirPath: element?.expression?.[0]}})\n      .filter(item => this.severityLevelsFormControl.value.indexOf(item.severity) != -1);\n    this.onExportValidationResults.emit({jsonResource: jsonResource, resultsData: resultsData});\n  }\n\n\n  getIgVersionsList(selectedIgName: string, igList: ImplementationGuide[]) {\n    this.igVersionDropdownList = igList.filter(el=> el.name== selectedIgName).map( el=> el.version);\n    this.selectedIgVersion = this.igVersionList.find(el=> el == 'current');\n    this.selectedIG = this.igList.find(el => el.name == selectedIgName && el.version == this.selectedIgVersion);\n    this.igSelectionFg.controls['selectedIgVersion'].patchValue(this.selectedIgVersion);\n  }\n\n  setSelectedIg(selectedIgName: string, selectedIgVersion: string) {\n    this.selectedIG = this.igList.find(el => el.name == selectedIgName && el.version == selectedIgVersion);\n  }\n}\n","@if (isLoading) {\n  <div class=\"spinner-container\">\n    <mat-spinner></mat-spinner>\n  </div>\n}\n\n@if (validatorTitle) {\n  <mat-card-header  id=\"validator-title\">\n    <mat-card-title>{{ validatorTitle }}</mat-card-title>\n  </mat-card-header>\n}\n\n\n<!-- The section below renders error messages returned by the validator.-->\n@if (serverErrorDetected) {\n  <div class=server-error-message-container>\n    <button mat-button class=\"close-button\" color=\"accent\" aria-label=\"Close\" disableRipple\n      (click)=\"onCloseServerErrorMessage()\">\n      <mat-icon>close</mat-icon>\n    </button>\n    <div class=\"server-error-status\"><h2>Server Error Response Status: {{ serverErrorStatus }}</h2></div>\n    @for (serverError of serverErrorList; track serverError) {\n      <div class=\"server-error-message-text\"\n      [innerText]=\"serverError.diagnostics\"></div>\n    }\n  </div>\n}\n\n<!-- TODO remove this code when the API code is updated to return 408 on request timeout -->\n@if (serverTimoutDetected) {\n  <div class=server-error-message-container>\n    <button mat-button class=\"close-button\" color=\"accent\" aria-label=\"Close\" disableRipple\n      (click)=\"serverTimoutDetected = false\">\n      <mat-icon>close</mat-icon>\n    </button>\n    <div class=\"server-error-status\"><h2>Server Timeout Error.</h2></div>\n  </div>\n}\n\n<!--Actions available above the FHIR validator input textarea-->\n<div class=\"row-button-wrapper\">\n\n  <!--Select JSON/XML radio group-->\n  @if (validationInputFormat.format == 'xml and json') {\n    <mat-radio-group [(ngModel)]=\"resourceFormat\" [disabled]=isLoading >\n      <mat-radio-button\n        value=\"json\"\n        [checked]=\"resourceFormat =='json'\"\n        (select)=\"resourceFormat = 'json'\">\n        JSON\n      </mat-radio-button>\n      <mat-radio-button\n        value=\"xml\"\n        [checked]=\"resourceFormat =='xml'\"\n        (select)=\"resourceFormat = 'xml'\">\n        XML\n      </mat-radio-button>\n    </mat-radio-group>\n  }\n\n  @if(igList?.length > 1){\n    <form [formGroup]=\"igSelectionFg\">\n    <mat-form-field appearance=\"outline\" class=\"margin-left-md margin-top-md margin-right-md\">\n      <mat-label>Select IG</mat-label>\n      <mat-select formControlName=\"selectedIgName\">\n        @for (igName of igNameList; track igName) {\n          <mat-option [value]=\"igName\">\n            {{ igName }}\n          </mat-option>\n        }\n      </mat-select>\n      @if (igSelectionFg.invalid) {\n        <mat-error>Select Implementation Guide</mat-error>\n      }\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"margin-left-md margin-top-md margin-right-md\">\n      <mat-label>Select IG Version</mat-label>\n      <mat-select [disabled]=\"!selectedIgName\" formControlName=\"selectedIgVersion\">\n        @for (igVersion of igVersionDropdownList; track igVersion) {\n          <mat-option [value]=\"igVersion\">\n            {{igVersion}}\n          </mat-option>\n        }\n      </mat-select>\n    </mat-form-field>\n    </form>\n  }\n\n  @if (validationInputFormat?.format == 'xml and json') {\n    <span class=\"content-spacer\"></span>\n  }\n\n  <!--File upload widget-->\n  <input type=\"file\" class=\"file-input\" (click)=\"fileUpload.value=null\"\n    [accept]=\"validationInputFormat?.accepts?.toString()\"\n    (change)=\"onFileSelected($event)\" #fileUpload>\n\n  @if (validationInputFormat.format == 'xml and json') {\n    <span class=\"filename\">{{fileName}}</span>\n  }\n\n  <button mat-raised-button [style.background-color]=\"buttonBackgroundColor\" [style.color]=\"buttonTxtColor\"\n    class=\"upload-btn\"\n    (click)=\"clearUI(); fileUpload.click();\" [disabled]=isLoading>\n    <mat-icon>upload</mat-icon>\n    Upload\n  </button>\n\n  @if (!(validationInputFormat.format == 'xml and json')) {\n    <span class=\"filename\">{{fileName}}</span>\n  }\n</div>\n\n<!-- FHIR validator text editor-->\n<div class=\"textarea-wrapper\">\n  <div class=\"line-numbers\" #numbers>\n    @for (i of getLineNumbers(); track i) {\n      <div class=\"numbers\">{{i}}</div>\n    }\n  </div>\n  <textarea\n    #validatorInput\n    rows=\"30\"\n    [(ngModel)]=\"fhirResource\"\n    (ngModelChange)=\"onResourceContentChanged.emit(fhirResource)\"\n    [ngStyle]=\"{'border-color': (!!validationErrorStr && validationErrorStr != 'Please select an Implementation Guide') ? 'red': null }\"\n    (paste)=\"onPasteFhirResource($event)\"\n    [disabled]=\"isLoading\"\n    (input)=\"lineNumbers()\"\n    (scroll)=\"numbers.scrollTop = validatorInput.scrollTop\"\n    >\n  </textarea>\n</div>\n\n<!--Actions available below the FHIR validator input textarea-->\n@if (formatResourceBtnShown || clearValidatorBtnShown || submitBtnShown || validationErrorStr) {\n  <div class=\"row-button-wrapper\">\n    @if (submitBtnShown && (submitBtnAlignment=='left') && !isLoading) {\n      <span>\n        <button mat-raised-button [style.background-color]=\"buttonBackgroundColor\" [style.color]=\"buttonTxtColor\" class=\"button\"\n          (click)=\"validateFhirResource(fhirResource, resourceFormat)\">\n          <mat-icon>send</mat-icon>\n          Submit\n        </button>\n      </span>\n    }\n    @if (formatResourceBtnShown && !isLoading) {\n      <button [ngClass]=\"{'left-margin-spacer': submitBtnAlignment=='left'}\" mat-raised-button\n        [style.background-color]=\"buttonBackgroundColor\" [style.color]=\"buttonTxtColor\"\n        (click)=\"onFormatInput();\"\n        [disabled]=\"!fhirResource\">\n        <mat-icon>code</mat-icon>\n        Format Input\n      </button>\n    }\n    <span class=\"content-spacer\"></span>\n    @if (validationFinished) {\n      <span id=\"error-response\">\n        @if (!!validationErrorStr && !isValidResource) {\n          <span class=\"danger-color\">{{validationErrorStr}}</span>\n        }\n        @if (isValidResource) {\n          <span class=\"success-color\"> This is a valid FHIR resource.</span>\n        }\n      </span>\n    }\n    <span class=\"content-spacer\"></span>\n    @if (clearValidatorBtnShown && !isLoading) {\n      <button\n        mat-raised-button color=\"success\" class=\"button\"\n        (click)=\"onClear()\">\n        <mat-icon>clear</mat-icon>\n        Clear Validator\n      </button>\n    }\n    @if (submitBtnShown && (submitBtnAlignment =='right') && !isLoading) {\n      <span class=\"left-margin-spacer\">\n        <button mat-raised-button color=\"accent\" class=\"button\"\n          (click)=\"validateFhirResource(fhirResource, resourceFormat)\">\n          <mat-icon>send</mat-icon>\n          {{ submitBtnTitle}}\n        </button>\n      </span>\n    }\n  </div>\n}\n\n@if (isLoading && cancelValidationBtnShown) {\n  <div class=\"row-button-wrapper padding-top-md\">\n    <span class=\"content-spacer\"></span>\n    <button mat-raised-button color=\"warn\" (click)=\"onCancelValidation()\">\n      <mat-icon>cancel</mat-icon>\n      Cancel Validation\n    </button>\n  </div>\n}\n\n<!-- Actions available after validator has processed data-->\n\n@if (apiResponse?.issue && !isLoading) {\n  <div>\n    <div class=\"padding-top-md\">\n      <div (click)=\"onFilterResults()\">\n        <mat-button-toggle-group name=\"severity level filter\" [formControl]=\"severityLevelsFormControl\"\n          aria-label=\"severity level filter\" multiple class=\"full-width\">\n          @for (level of severityLevels; track level) {\n            <mat-button-toggle\n              id=\"format-toggle-buttons\"\n              [value]=\"level\"\n              [disabled]=\"!isFilterEnabled(level)\">\n              <!-- In order to synchronise the state of the button with the state of the checkbox, we simply show or hide\n              selected or deselected checkbox.-->\n              @if (severityLevelsFormControl?.value.indexOf(level) != -1) {\n                <mat-checkbox\n                  color=\"primary\"\n                  [checked]=true\n                  [disabled]=\"!isFilterEnabled(level)\"\n                  [disableRipple]=\"true\"\n                  >\n                </mat-checkbox>\n              }\n              @if (severityLevelsFormControl?.value.indexOf(level) === -1) {\n                <mat-checkbox\n                  color=\"primary\"\n                  [checked]=false\n                  [disabled]=\"!isFilterEnabled(level)\"\n                  [disableRipple]=\"true\"\n                  >\n                </mat-checkbox>\n              }\n              {{level | titlecase }} ({{getCount(level)}})\n            </mat-button-toggle>\n          }\n        </mat-button-toggle-group>\n      </div>\n      @if (validationResultsExpanded) {\n        <div class=\"padding-top-md box\">\n          @if (!resultDetailsExpandBtnShown) {\n            <button mat-raised-button color=primary (click)=\"resultDetailsExpandBtnShown = true\">\n              <mat-icon>expand_more</mat-icon> Expand Validation Results\n            </button>\n          }\n          @if (resultDetailsExpandBtnShown) {\n            <button mat-raised-button color=primary (click)=\"resultDetailsExpandBtnShown = false\">\n              <mat-icon>expand_less</mat-icon> Collapse Validation Results\n            </button>\n          }\n          <span class=\"content-spacer\"></span>\n          @if (exportResultsButtonShown) {\n            <button mat-raised-button (click)=\"exportValidationResults()\" color=\"accent\"\n              [disabled]=\"!(dataSource?.data?.length>0)\">\n              <mat-icon>folder_zip</mat-icon>\n              {{exportValidationResultsBtnName}}\n            </button>\n          }\n        </div>\n      }\n      @if (severityLevelsFormControl?.value?.length === 0) {\n        <div>\n          Please select severity level to see the result.\n        </div>\n      }\n      @if ((!validationResultsExpanded) && exportResultsButtonShown) {\n        <div class=\"padding-top-md box margin-bottom-md\">\n          <button mat-raised-button (click)=\"exportValidationResults()\" color=\"accent\"\n            [disabled]=\"!(dataSource?.data?.length>0)\" class=\"margin-left-md\">\n            <mat-icon>folder_zip</mat-icon>\n            {{exportValidationResultsBtnName}}\n          </button>\n        </div>\n      }\n      @if (severityLevelsFormControl?.value?.length > 0 && resultDetailsExpandBtnShown) {\n        <table\n          mat-table [dataSource]=\"dataSource\" multiTemplateDataRows\n          >\n          <!-- First column contains expand/collapse widget. The user can chose to expand/collapse all rows,\n          as well as expand/collapse individual rows. Note that the expand/collapse all can be toggled automatically\n          based the state of the individual expand/collapse rows. For example if all rows are expanded and \"expand all\"\n          is rendered, we automatically hide it end render \"collapse all\" -->\n          <ng-container matColumnDef=\"toggle\">\n            <th mat-header-cell *matHeaderCellDef (click)=\"toggle()\">\n              @if (!allExpanded) {\n                <mat-icon class=\"pointer\" matTooltip=\"Expand All\" aria-label=\"expand all\">\n                  expand_more\n                </mat-icon>\n              }\n              @if (allExpanded) {\n                <mat-icon class=\"pointer\" matTooltip=\"Collapse All\" aria-label=\"collapse all\">\n                  expand_less\n                </mat-icon>\n              }\n            </th>\n            <td mat-cell *matCellDef=\"let validationResultItem\" class=\"pointer\"\n              (click)=\"validationResultItem.expanded = !validationResultItem.expanded; checkExpandCollapseAllStatus()\">\n              @if (!validationResultItem.expanded) {\n                <mat-icon aria-label=\"expand\">\n                  expand_more\n                </mat-icon>\n              }\n              @if (validationResultItem.expanded) {\n                <mat-icon aria-label=\"collapse\">\n                  expand_less\n                </mat-icon>\n              }\n            </td>\n          </ng-container>\n          <!-- Severity level icons -->\n          <ng-container matColumnDef=\"icon\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let validationResultItem\">\n              @if (validationResultItem.severity === 'Error') {\n                <mat-icon\n                  class=\"danger-color\">error\n                </mat-icon>\n              }\n              @if (validationResultItem.severity === 'Warning') {\n                <mat-icon\n                  class=\"warning-color\">warning\n                </mat-icon>\n              }\n              @if (validationResultItem.severity === 'Information') {\n                <mat-icon\n                  class=\"success-color\">info\n                </mat-icon>\n              }\n              @if (validationResultItem.severity === 'Note') {\n                <mat-icon\n                  class=\"md-primary-color\">edit_note\n                </mat-icon>\n              }\n            </td>\n          </ng-container>\n          <!-- Severity level string -->\n          <ng-container matColumnDef=\"severity\">\n            <th mat-header-cell *matHeaderCellDef>Severity</th>\n            <td mat-cell *matCellDef=\"let validationResultItem\">\n              {{validationResultItem.severity}}\n            </td>\n          </ng-container>\n          <!-- Severity level string -->\n          <ng-container matColumnDef=\"fhirPath\">\n            <th mat-header-cell *matHeaderCellDef>FHIR path</th>\n            <td mat-cell *matCellDef=\"let validationResultItem\">\n              {{validationResultItem?.expression?.[0]}}\n            </td>\n          </ng-container>\n          <!-- The location as returned by the server. Note that the resource returned by the  response could be\n          formatted differently then the request resource. What this means is the the line numbers in the response\n          resource many not match those in the request.-->\n          <ng-container matColumnDef=\"location\">\n            <th mat-header-cell *matHeaderCellDef id=\"location-column-header\"> Location</th>\n            <td mat-cell *matCellDef=\"let validationResultItem\" (click)=\"onLocationSelected(validationResultItem)\">\n              <span class=\"location-data\"> {{validationResultItem.location}}</span>\n            </td>\n          </ng-container>\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let validationResultItem\" [attr.colspan]=\"displayedColumns?.length\">\n              <div class=\"validation-result-detail\"\n                [@detailExpand]=\"validationResultItem.expanded ? 'expanded' : 'collapsed'\">\n                <div class=\"validation-result-text-value\">\n                  {{validationResultItem.diagnostics}}\n                </div>\n              </div>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let validationResultItem; columns: displayedColumns;\"\n            class=\"table-row\"\n            [class.expanded-row]=\"validationResultItem.expanded\">\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"text-value-row\"></tr>\n          </table>\n        }\n      </div>\n      <!-- Resource as returned from the validator. Note that the resource returned from the validator may be\n      formatted differently then the resource we sent to the validator. -->\n      @if (resultDetailsExpandBtnShown && apiResponse?.formattedResource) {\n        <div class=\"padding-top-md\">\n          <div class=\"line-numbers-response\" #numbers>\n            @for (item of apiResponse?.formattedResource?.split('\\n'); track item; let i = $index) {\n              <div class=\"numbers-response\">{{i + 1}}</div>\n            }\n          </div>\n          <div class=\"validator-response\">\n            @for (item of apiResponse?.formattedResource?.split('\\n'); track item; let i = $index) {\n              <span>\n                <pre [ngClass]=\"getLineItemClass(item, i)\" class=\"line-item\" [id]=\"'mark'+ (i+1)\">{{item}}</pre>\n              </span>\n            }\n          </div>\n        </div>\n      }\n    </div>\n  }\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { NgxFhirValidatorComponent } from './components/ngx-fhir-validator.component';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {CommonModule} from \"@angular/common\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport { provideHttpClient, withInterceptorsFromDi } from \"@angular/common/http\";\nimport {ValidatorConstants} from \"./providers/validator-constants\";\n\n\n\n@NgModule({ declarations: [\n        NgxFhirValidatorComponent\n    ],\n    exports: [\n        NgxFhirValidatorComponent\n    ], imports: [CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatButtonModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatProgressSpinnerModule,\n        MatSortModule,\n        MatRadioModule,\n        FormsModule,\n        MatCardModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDividerModule], providers: [\n        ValidatorConstants,\n        provideHttpClient(withInterceptorsFromDi())\n    ] })\nexport class NgxFhirValidatorModule {\n\n  public static forRoot(serverBaseUrl: string): ModuleWithProviders<NgxFhirValidatorModule>{\n    return {\n      ngModule: NgxFhirValidatorModule,\n      providers: [\n        {\n          provide: 'serverBaseUrl',\n          useValue: serverBaseUrl\n        }\n      ]\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-fhir-validator\n */\nexport * from './lib/components/ngx-fhir-validator.component';\nexport * from './lib/ngx-fhir-validator.module';\n\nexport * from './lib/modal/response-item';\nexport * from './lib/modal/validation-results';\nexport * from './lib/modal/validator-input-format';\nexport * from './lib/modal/api-response';\nexport * from './lib/modal/implementation-guide';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.EnvironmentHandlerService","i1.FhirValidatorService","i2"],"mappings":"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"}